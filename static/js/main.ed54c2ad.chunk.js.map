{"version":3,"sources":["components/TimeboxEditor.js","lib/time.js","components/Clock.js","components/ProgressBar.js","components/CurrentTimebox.js","components/EditableTimebox.js","components/Timebox.js","components/TimeboxCreator.js","components/ErrorMessage.js","components/ErrorBoundary.js","api/AxiosTimeboxesApi.js","components/TimeboxList.js","components/LoginForm.js","api/AuthenticatorApi.js","components/App.js","index.js"],"names":["TimeboxEditor","props","handleConfirmation","e","onConfirmation","elapsedTime","taskTimeInSeconds","taskTimeInput","current","value","preventDefault","titleInput","alert","toFixed","React","createRef","this","title","isEditable","className","htmlFor","id","type","defaultValue","ref","disabled","onClick","Component","reworkTime","fullSec","Math","floor","normalizeTime","min","max","targetLength","toString","length","fillWithZeros","timeInterval","Clock","hours","minutes","seconds","miliseconds","coloredNumbers","clockNumberClassName","classNames","defaultProps","ProgressBar","percent","trackRemaining","barColor","progressClassName","checkColor","colorName","progressBarClassName","ProgressBarWidth","style","width","CurrentTimebox","isRunning","isPaused","pausesCount","remainingTime","actualPercent","handleStart","handleStop","togglePause","onConfirm","EditableTimebox","state","initialTime","actualTime","taskTimeInMs","endTime","handleChangeTitle","setState","handleChangeTaskTime","taskTime","handleChangeTaskTimeWhileRunning","setEndTime","setRemainingTime","Date","now","start","stop","handleEdit","prevState","handleEditConfirmation","countDown","setInterval","console","log","setElapsedTime","setActualPercent","forceStop","clearInterval","repause","taskTimeAfterPause","StrictMode","onChangeTitle","onChangeTaskTime","Timebox","onDelete","onEdit","onChange","Error","TimeboxCreator","handleSubmit","onCreate","form","children","taskInput","timeInput","onSubmit","ErrorMessage","message","hasError","ErrorBoundary","error","errorInfo","axios","require","BASE_URL","AxiosTimeboxesAPI","getAllTimeboxes","a","get","response","data","timeboxes","addTimebox","timeboxToAdd","post","addedTimebox","replaceTimebox","timeboxToReplace","put","replacedTimebox","removeTimebox","timeboxToRemove","delete","TimeboxList","editInput","loadingError","loading","handleCreate","createdTimebox","timebox","TimeboxesAPI","then","indexToRemove","filter","index","updateArray","array","splice","editTimebox","indexToChange","timeboxToEdit","changeTitle","target","catch","finally","map","key","LoginForm","onLoginAttempt","email","loginForm","emailInput","password","passwordInput","errorMessage","AuthenticatorAPI","login","credentials","makeRequest","json","result","url","method","body","jsonBody","JSON","stringify","undefined","fetch","headers","ok","App","accessToken","previousLoginAttemptFailed","getUserEmail","jwt","decode","handleLogout","handleLoginAttempt","isUserLoggedIn","href","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ed54c2ad.chunk.js","sourcesContent":["import React from \"react\";\n\nclass TimeboxEditor extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.titleInput = React.createRef();\n        this.taskTimeInput = React.createRef();\n        // console.count(\"constructor\");\n    }\n\n    componentDidMount() {\n        // console.count(\"mounted component\");\n    }\n\n    componentDidUpdate() {\n        // console.count(\"updated component\");\n    }\n\n    componentWillUnmount() {\n        // console.count(\"unmounted component\");\n    }\n\n    handleConfirmation = e => {\n        const { onConfirmation, elapsedTime, taskTimeInSeconds } = this.props;\n        if ((this.taskTimeInput.current.value * 60 > elapsedTime) && (this.taskTimeInput.current.value * 60 !== taskTimeInSeconds)) {\n            //!need to learn about that\n            e.preventDefault();\n            onConfirmation(this.titleInput.current.value, this.taskTimeInput.current.value)\n        } else {\n            alert(`wprowadzony czas nie może byc mniejszy od ${(elapsedTime / 60).toFixed(2)} min. oraz musi być inny niż wprowadzony czas początkowy`);\n        }\n    }\n\n    render() {\n        // console.count(\"render\");\n        const {\n            title,\n            taskTimeInSeconds,\n            isEditable,\n        } = this.props;\n\n        return (\n            <div\n                className={isEditable ? \"TimeboxEditor\" : \"TimeboxEditor inactive\"}\n            >\n                <label htmlFor=\"taskInput\">Co robisz?</label>\n                <input\n                    id=\"taskInput\"\n                    type=\"text\"\n                    defaultValue={title}\n                    ref={this.titleInput}\n                />\n                <br />\n                <label htmlFor=\"timeInput\">Ile minut?</label>\n                <input\n                    id=\"timeInput\"\n                    type=\"number\"\n                    defaultValue={taskTimeInSeconds / 60}\n                    ref={this.taskTimeInput}\n                />\n                <br />\n                <button disabled={!isEditable} onClick={this.handleConfirmation}>\n                    Zatwierdź zmiany\n            </button>\n            </div>\n        );\n    }\n}\n\nexport default TimeboxEditor;\n","const reworkTime = value => {\n    const fullSec = Math.floor(value);\n    const hours = Math.floor(value / 3600);\n    const minutes = Math.floor(value / 60) >= 60 ? Math.floor(value / 60) - 60 : Math.floor(value / 60);\n    // const minutes = Math.floor(value / 60) === 60 ? 0 : Math.floor(value / 60)\n    const seconds = Math.floor(value % 60);\n    //to prevent counting after passing 0\n    const miliseconds = fullSec >= 0 ? Math.floor((value - fullSec) * 1000) : 0;\n    // return(hours, minutes, seconds, ms);\n    return [hours, minutes, seconds, miliseconds];\n};\n\nfunction timeInterval(min, max, value) {\n    //It will return a number between min and max\n    value = Math.max(min, Math.min(value, max));\n    return value;\n}\n\nfunction fillWithZeros(targetLength, value) {\n    //It will add zeros  before value till value.length = targetLength\n    value = value.toString();\n    while (value.length < targetLength) {\n        value = `0${value}`;\n    }\n    return value;\n}\n\nfunction normalizeTime(min, max, targetLength, value) {\n    return fillWithZeros(targetLength, timeInterval(min, max, value));\n}\n\nexport { reworkTime, normalizeTime };","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from 'prop-types';\nimport { normalizeTime } from '../lib/time'\n\nfunction Clock({ className, hours, minutes, seconds, miliseconds, coloredNumbers }) {\n\n    let clockNumberClassName = classNames(\n        \"clock__numbers\",\n        { \"clock__numbers--colored\": coloredNumbers }\n    )\n\n    hours = normalizeTime(0, 24, 2, hours);\n    minutes = normalizeTime(0, 59, 2, minutes >= 60 ? minutes % 60 : minutes);\n    seconds = normalizeTime(0, 59, 2, seconds);\n    miliseconds = normalizeTime(0, 999, 3, miliseconds);\n\n    return (\n        <h2 className={\"clock \" + className}>\n            {\" \"}\n            Pozostało <mark className={clockNumberClassName}>{hours}</mark>:\n            <mark className={clockNumberClassName}>{minutes}</mark>:\n            <mark className={clockNumberClassName}>{seconds}</mark>:\n            <mark className={clockNumberClassName}>{miliseconds}</mark>\n        </h2>\n    );\n}\n\nClock.defaultProps = {\n    className: \"\",\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n    miliseconds: 0,\n\n}\n\nClock.propTypes = {\n    className: PropTypes.string,\n    hours: PropTypes.number.isRequired,\n    minutes: PropTypes.number.isRequired,\n    seconds: PropTypes.number.isRequired,\n    miliseconds: PropTypes.number.isRequired\n}\n\nexport default Clock;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from 'prop-types';\n\n\nfunction ProgressBar({ className = \"\", percent, trackRemaining, barColor }) {\n    let progressClassName = classNames(\n        \"progress\",\n        className,\n        { \"progress--reverse\": trackRemaining }\n    );\n\n    function checkColor(colorName) {\n        if (barColor === colorName) return true\n    }\n\n    let progressBarClassName = classNames(\n        \"progress__bar\",\n        {\n            \"progress__bar--red\": checkColor(\"red\"),\n            \"progress__bar--blue\": checkColor(\"blue\"),\n            \"progress__bar--green\": checkColor(\"green\")\n        }\n    )\n\n    const ProgressBarWidth =\n        trackRemaining === true ? `calc(100 % - ${percent} %)` : `${percent}% `;\n\n    return (\n        <div className={progressClassName}>\n            <div className={progressBarClassName} style={{ width: `${ProgressBarWidth} ` }}></div>\n        </div>\n    );\n}\n\nfunction isNumberBetweenRange(props, propName, componentName) {\n    if (typeof props[propName] !== \"number\") {\n        return new Error(`${propName} has to be number!`);\n    } else if (parseInt(props[propName], 10) > 100 || parseInt(props[propName], 10) < 0) {\n        return new Error(`An error in ${componentName}, ${propName} has to be between 10 and 50 and now it is equal to ${props[propName]}`);\n    }\n}\n\nProgressBar.propTypes = {\n    percent: isNumberBetweenRange,\n    barColor: PropTypes.oneOf(['red', 'green', 'blue']),\n}\n\nexport default ProgressBar;\n","import React from \"react\";\nimport Clock from \"./Clock\";\nimport ProgressBar from \"./ProgressBar\";\nimport { reworkTime } from \"../lib/time\";\n\n\nfunction CurrentTimebox(props) {\n    const {\n        title,\n        isRunning,\n        isPaused,\n        isEditable,\n        pausesCount,\n        remainingTime,\n        actualPercent,\n        taskTimeInSeconds,\n        handleStart,\n        handleStop,\n        togglePause,\n        onConfirm\n    } = props;\n\n    //if timebox is not running display time entered in input else display  remaining time\n    const [hours, minutes, seconds, miliseconds] = reworkTime(isRunning ? remainingTime : taskTimeInSeconds);\n    return (\n        <div\n            className={\n                isEditable ? \"CurrentTimebox inactive\" : \"CurrentTimebox\"\n            }\n        >\n            <h1>{title}</h1>\n            <Clock\n                className={isPaused ? \"inactive\" : \"\"}\n                hours={hours}\n                minutes={minutes}\n                seconds={seconds}\n                miliseconds={miliseconds}\n                coloredNumbers={true}\n            />\n            <ProgressBar\n                className={isPaused ? \"inactive\" : \"\"}\n                percent={actualPercent}\n                trackRemaining={false}\n                barColor=\"red\"\n            />\n            <button onClick={onConfirm} disabled={isEditable}>\n                Edytuj\n            </button>\n            <button onClick={handleStart} disabled={isRunning}>\n                Start\n            </button>\n            <button onClick={handleStop} disabled={!isRunning}>\n                Stop\n            </button>\n            <button onClick={togglePause} disabled={!isRunning}>\n                {isPaused ? \"Wznów\" : \"Pauzuj\"}\n            </button>\n            Liczba przerw: {pausesCount}\n        </div>\n    );\n}\n\nexport default CurrentTimebox;\n","import React from \"react\";\n\nimport TimeboxEditor from \"./TimeboxEditor\";\nimport CurrentTimebox from \"./CurrentTimebox\";\n\nclass EditableTimebox extends React.Component {\n    state = {\n        title: \"To pole powinno działać\",\n        taskTimeInSeconds: 0,\n        isRunning: false,\n        isPaused: false,\n        isEditable: true,\n        pausesCount: 0,\n        initialTime: 0,\n        actualTime: 0,\n        taskTimeInMs: 0,\n        endTime: 0,\n        remainingTime: 0,\n        elapsedTime: 0,\n        actualPercent: 0\n    };\n\n    handleChangeTitle = (title) => {\n        this.setState({\n            title: title\n        });\n    };\n\n    handleChangeTaskTime = (taskTime) => {\n        const { elapsedTime } = this.state;\n        this.setState({\n            //* 60 to convert minutes to seconds\n            taskTimeInSeconds: taskTime * 60,\n            taskTimeInMs: taskTime * 60 * 1000\n        });\n        //elapsedTime>0 mean that program is running or it is paused\n        if (elapsedTime > 0) {\n            this.handleChangeTaskTimeWhileRunning();\n        }\n    };\n\n    handleChangeTaskTimeWhileRunning = () => {\n        //needed to edit taskTime while counting down!\n        this.setState(state => ({\n            taskTimeInMs: state.taskTimeInMs - state.elapsedTime * 1000\n        }));\n        this.setEndTime();\n        this.setRemainingTime();\n    };\n\n    handleStart = () => {\n        const initialTime = Date.now();\n        this.setState({\n            isRunning: true,\n            initialTime: initialTime\n        });\n        this.start();\n        this.setEndTime();\n    };\n    handleStop = () => {\n        this.stop();\n        const { taskTimeInSeconds } = this.state;\n        this.setState({\n            isRunning: false,\n            isPaused: false,\n            pausesCount: 0,\n            initialTime: 0,\n            actualTime: 0,\n            taskTimeInMs: taskTimeInSeconds * 1000,\n            endTime: 0,\n            remainingTime: 0,\n            actualPercent: 0,\n            elapsedTime: 0\n        });\n    };\n\n    handleEdit = () => {\n\n        this.setState(function (prevState) {\n            const isEditable = !prevState.isEditable;\n            return {\n                isEditable: isEditable\n            };\n        });\n    };\n\n    handleEditConfirmation = (title, taskTime) => {\n        this.handleEdit();\n        this.handleChangeTitle(title);\n        this.handleChangeTaskTime(taskTime);\n\n    }\n\n    start = () => {\n        this.countDown = setInterval(() => {\n            let actualTime = Date.now();\n            console.log(\"timer is working\");\n            this.setState({\n                actualTime: actualTime\n            });\n            this.setRemainingTime();\n            this.setElapsedTime();\n            this.setActualPercent();\n            this.forceStop();\n        }, 10);\n    };\n\n    stop = () => {\n        clearInterval(this.countDown);\n    };\n\n    forceStop = () => {\n        const { remainingTime } = this.state;\n        if (remainingTime <= 0) {\n            this.stop();\n        }\n    };\n\n    togglePause = () => {\n        this.setState(function (prevState) {\n            const isPaused = !prevState.isPaused;\n            return {\n                isPaused: isPaused,\n                pausesCount: prevState.isPaused\n                    ? prevState.pausesCount + 1\n                    : prevState.pausesCount\n            };\n        });\n        const { isPaused } = this.state;\n        isPaused ? this.repause() : this.stop();\n    };\n\n    repause = () => {\n        //create new initialTime, use remainingTime as new taskTimeInMsInMiliseconds\n        const { remainingTime } = this.state;\n        const initialTime = Date.now();\n        const taskTimeAfterPause = remainingTime * 1000;\n        this.setState({\n            isRunning: true,\n            initialTime: initialTime,\n            taskTimeInMs: taskTimeAfterPause\n        });\n        this.start();\n        this.setEndTime();\n    };\n\n    setEndTime = () => {\n        this.setState(function (prevState) {\n            let endTime = prevState.initialTime + prevState.taskTimeInMs;\n            return {\n                endTime: endTime\n            };\n        });\n    };\n\n    setRemainingTime = () => {\n        this.setState(function (prevState) {\n            let remainingTime =\n                (prevState.endTime - prevState.actualTime) / 1000;\n            return {\n                remainingTime: remainingTime\n            };\n        });\n    };\n\n    setElapsedTime = () => {\n        this.setState(function (prevState) {\n            let elapsedTime =\n                prevState.taskTimeInSeconds - prevState.remainingTime;\n            return {\n                elapsedTime: elapsedTime\n            };\n        });\n    };\n\n    setActualPercent = () => {\n        this.setState(function (prevState) {\n            //*1000 to convert seconds to ms and *100 to convert fraction to a full number\n            let actualPercent =\n                (prevState.elapsedTime / prevState.taskTimeInSeconds) * 100;\n            return {\n                actualPercent: actualPercent\n            };\n        });\n    };\n\n    render() {\n        const {\n            title,\n            taskTimeInSeconds,\n            isRunning,\n            isPaused,\n            isEditable,\n            pausesCount,\n            initialTime,\n            actualTime,\n            taskTimeInMs,\n            endTime,\n            remainingTime,\n            actualPercent,\n            elapsedTime\n        } = this.state;\n\n        return (\n            <>\n                <React.StrictMode>\n                    {\n                        isEditable ? (\n                            <TimeboxEditor\n                                title={title}\n                                taskTimeInSeconds={taskTimeInSeconds}\n                                isRunning={isRunning}\n                                isEditable={isEditable}\n                                elapsedTime={elapsedTime}\n                                onChangeTitle={this.handleChangeTitle}\n                                onChangeTaskTime={this.handleChangeTaskTime}\n                                onConfirmation={this.handleEditConfirmation}\n                            />\n                        ) : (\n                                <CurrentTimebox\n                                    title={title}\n                                    isRunning={isRunning}\n                                    isPaused={isPaused}\n                                    isEditable={isEditable}\n                                    pausesCount={pausesCount}\n                                    initialTime={initialTime}\n                                    actualTime={actualTime}\n                                    taskTimeInMs={taskTimeInMs}\n                                    endTime={endTime}\n                                    remainingTime={remainingTime}\n                                    actualPercent={actualPercent}\n                                    elapsedTime={elapsedTime}\n                                    taskTimeInSeconds={taskTimeInSeconds}\n                                    handleStart={this.handleStart}\n                                    handleStop={this.handleStop}\n                                    start={this.start}\n                                    stop={this.stop}\n                                    forceStop={this.forceStop}\n                                    togglePause={this.togglePause}\n                                    repause={this.repause}\n                                    setEndTime={this.setEndTime}\n                                    setRemainingTime={this.setRemainingTime}\n                                    setElapsedTime={this.setElapsedTime}\n                                    setActualPercent={this.setActualPercent}\n                                    onConfirm={this.handleEdit}\n                                />\n                            )\n                    }\n                </React.StrictMode>\n            </>\n        );\n    }\n}\n\nexport default EditableTimebox;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction Timebox({ title, taskTime, onDelete, onEdit, onChange }) {\n    if (taskTime <= 0) {\n        throw new Error(\"Czas zadania musi być większy niż zero\");\n    }\n\n    return (\n        <div className=\"Timebox\">\n            <h3>\n                {title} - {taskTime} min.\n            </h3>\n            <button onClick={onDelete}>Usuń</button>\n            <button onClick={onEdit}>Zmień</button>\n            <input onChange={onChange} />\n        </div>\n    );\n}\n\nconst stringOrNumber = PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\nTimebox.propTypes = {\n    title: stringOrNumber.isRequired,\n    taskTime: stringOrNumber.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n\nexport default Timebox;\n","import React from \"react\";\n\n\nclass TimeboxCreator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.form = React.createRef();\n    }\n\n    handleSubmit = e => {\n        const { onCreate } = this.props;\n        e.preventDefault();\n        onCreate({\n            title: this.form.current.children.taskInput.value,\n            taskTime: this.form.current.children.timeInput.value\n        });\n        this.form.current.children.taskInput.value = \"\";\n        this.form.current.children.timeInput.value = \"\";\n    };\n\n    render() {\n        return (\n            <form\n                ref={this.form}\n                onSubmit={this.handleSubmit}\n                className=\"TimeboxCreator\"\n            >\n                <label htmlFor=\"taskInput\">Co robisz?</label>\n                <input id=\"taskInput\" type=\"text\" />\n                <br />\n                <label htmlFor=\"timeInput\">Ile minut?</label>\n                <input id=\"timeInput\" type=\"number\" />\n                <br />\n                <button> Dodaj Timebox'a</button>\n            </form>\n        );\n    }\n}\n\nexport default TimeboxCreator;\n","\nimport React from 'react';\n\nfunction ErrorMessage({ message, children, hasError }) {\n    return (\n        <div>{hasError ? <div className=\"ErrorMessage\">{message}</div> : children}</div>\n    )\n}\n\nexport default ErrorMessage;\n","import React from \"react\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport PropTypes from 'prop-types';\n\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        console.log(\"%c wystąpił następujący błąd\", \"color: red\", error, errorInfo);\n    }\n\n    render() {\n        const { message, children } = this.props;\n        return (\n            // this.state.hasError ? message : children\n            <ErrorMessage hasError={this.state.hasError} message={message}>{children}</ErrorMessage>\n        )\n    }\n}\n\nErrorBoundary.propTypes = {\n    message: PropTypes.string.isRequired,\n    children: PropTypes.any.isRequired\n\n}\n\nexport default ErrorBoundary;","const axios = require('axios');\n\nconst BASE_URL = \"http://localhost:5000/timeboxes\";\n\nconst AxiosTimeboxesAPI = {\n    getAllTimeboxes: async function () {\n        const response = await axios.get(BASE_URL);\n        const timeboxes = await response.data;\n        return timeboxes;\n    },\n    addTimebox: async function (timeboxToAdd) {\n        const response = await axios.post(BASE_URL, timeboxToAdd);\n        const addedTimebox = await response.data;\n        return addedTimebox;\n    },\n    replaceTimebox: async function (timeboxToReplace) {\n        if (!timeboxToReplace.id) {\n            throw new Error(\"Timebox has to have an id to be updated\");\n        }\n        const response = await axios.put(`${BASE_URL}/${timeboxToReplace.id}`, timeboxToReplace);\n        const replacedTimebox = await response.data;\n        return replacedTimebox;\n    },\n    removeTimebox: async function (timeboxToRemove) {\n        if (!timeboxToRemove.id) {\n            throw new Error(\"Timebox has to have an id to be updated\");\n        }\n        const response = await axios.delete(`${BASE_URL}/${timeboxToRemove.id}`);\n        //! no need to return anything, if Promise wont throw error it means that timebox was removed\n    }\n}\n\nexport default AxiosTimeboxesAPI;\n","import React from \"react\";\nimport Timebox from \"./Timebox\";\nimport TimeboxCreator from \"./TimeboxCreator\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport TimeboxesAPI from \"../api/AxiosTimeboxesApi\"\n\n\nclass TimeboxList extends React.Component {\n    state = {\n        timeboxes: [],\n        editInput: \"\",\n        hasError: false,\n        loadingError: false,\n        loading: true,\n    };\n\n    //! Pytanie na live, dlaczego () => this.setState({...}), a nie po prostu this.setState po co ta funkcja i dlaczego jak jej nie ma to stan jest odrazu ustawiony na false..\n    componentDidMount() {\n        TimeboxesAPI.getAllTimeboxes().then(\n            (timeboxes) => this.setState({ timeboxes })\n        ).catch(\n            (error) => {\n                console.log(`Wystąpił błąd : ${error}`);\n                this.setState({ loadingError: true });\n            }\n        ).finally(\n            () => this.setState({ loading: false })\n        )\n    }\n\n    handleCreate = createdTimebox => {\n        try {\n            this.addTimebox(createdTimebox);\n        }\n        catch (error) {\n            console.log(\"metoda addTimebox wyrzuciła błąd\");\n            this.setState({ hasError: true });\n        }\n\n    };\n\n    addTimebox = timebox => {\n        // throw new Error(\"wystąpił błąd podczas dodawania timeboxa\");\n\n        TimeboxesAPI.addTimebox(timebox).then(\n            (addedTimebox) => this.setState(prevState => {\n                const timeboxes = [...prevState.timeboxes, addedTimebox];\n                return {\n                    //OR JUST timeboxes\n                    timeboxes: timeboxes\n                };\n            })\n        )\n\n    };\n\n    removeTimebox = indexToRemove => {\n        TimeboxesAPI.removeTimebox(this.state.timeboxes[indexToRemove])\n            .then(() => {\n                this.setState(prevState => {\n                    const timeboxes = prevState.timeboxes.filter(\n                        (timebox, index) => index !== indexToRemove\n                    );\n                    return {\n                        timeboxes: timeboxes\n                    };\n                });\n            })\n    };\n\n    updateArray = (array, index, value) => {\n        array.splice(index, 1);\n        array.splice(index, 0, value);\n        return array;\n    };\n\n    editTimebox = (indexToChange, timeboxToEdit) => {\n        TimeboxesAPI.replaceTimebox(timeboxToEdit)\n            .then(() => {\n                this.setState(prevState => {\n                    const timeboxes = prevState.timeboxes;\n                    this.updateArray(timeboxes, indexToChange, timeboxToEdit);\n                    return {\n                        timeboxes: timeboxes,\n                        editInput: \"\"\n                    };\n                });\n            }\n            )\n    };\n\n    changeTitle = e => {\n        this.setState({\n            editInput: e.target.value\n        });\n    };\n\n    render() {\n        const { timeboxes, editInput, hasError, loading, loadingError } = this.state;\n        return (\n            <>\n                <ErrorMessage hasError={hasError} message=\"timebox creator przestał działać\">\n                    <TimeboxCreator onCreate={this.handleCreate} />\n                </ErrorMessage>\n                <ErrorMessage hasError={loadingError} message=\"Nie udało się załadować timeboxów\">\n                    <h2>{loading ? \"loading timeboxes...\" : null}</h2>\n                    {\n                        timeboxes.map((timebox, index) => (\n                            <ErrorBoundary key={timebox.id} message=\"Coś się wywaliło w Timeboxie\">\n                                <Timebox\n                                    title={timebox.title}\n                                    taskTime={timebox.taskTime}\n                                    onDelete={() => this.removeTimebox(index)}\n                                    onEdit={() =>\n                                        this.editTimebox(index, {\n                                            ...timebox,\n                                            title: editInput\n                                        })\n                                    }\n                                    onChange={this.changeTitle}\n                                />\n                            </ErrorBoundary>\n                        ))\n                    }\n                </ErrorMessage>\n            </>\n        );\n    }\n}\n\nexport default TimeboxList;\n","import React from \"react\";\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.loginForm = React.createRef();\n    }\n\n    handleSubmit = e => {\n        const { onLoginAttempt } = this.props;\n        e.preventDefault();\n        onLoginAttempt({\n            email: this.loginForm.current.children.emailInput.value,\n            password: this.loginForm.current.children.passwordInput.value\n        });\n        this.loginForm.current.children.emailInput.value = \"\";\n        this.loginForm.current.children.passwordInput.value = \"\";\n    };\n\n    render() {\n        return (\n            <form\n                ref={this.loginForm}\n                onSubmit={this.handleSubmit}\n                className=\"LoginForm\"\n            >\n                {this.props.errorMessage ?\n                    <div className=\"LoginForm__error-message\">\n                        {this.props.errorMessage}\n                    </div>\n                    : \"\"\n                }\n                <label htmlFor=\"emailInputt\">Email: </label>\n                <input id=\"emailInput\" type=\"email\" />\n                <br />\n                <label htmlFor=\"passwordInput\">Password: </label>\n                <input id=\"passwordInput\" type=\"password\" />\n                <br />\n                <button>Zaloguj</button>\n            </form>\n        );\n    }\n}\n\nexport default LoginForm;\n","const BASE_URL = \"http://localhost:5000\";\nconst AuthenticatorAPI = {\n\n    login: async function (credentials) {\n\n        const response = await makeRequest(`${BASE_URL}/login`, \"POST\", credentials);\n        const result = await response.json();\n        return result;\n    },\n\n}\n\nexport default AuthenticatorAPI;\n\nasync function makeRequest(url, method, body) {\n    const jsonBody = body ? JSON.stringify(body) : undefined;\n    const response = await fetch(url, {\n        method: method,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: jsonBody\n    })\n    if (!response.ok) {\n        throw new Error(\"Something went wrong!...\");\n    }\n    return response;\n}","import React from \"react\";\nimport EditableTimebox from \"./EditableTimebox\";\nimport TimeboxList from \"./TimeboxList\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport LoginForm from \"./LoginForm\";\nimport AuthenticatorAPI from \"../api/AuthenticatorApi\";\nimport jwt from \"jsonwebtoken\";\nclass App extends React.Component {\n\n\tstate = {\n\t\taccessToken: null,\n\t\tpreviousLoginAttemptFailed: false\n\t}\n\n\tgetUserEmail = () => {\n\t\tconsole.log()\n\t\tconst decodedToken = jwt.decode(this.state.accessToken)\n\t\treturn decodedToken.email;\n\t}\n\n\thandleLogout = () => {\n\t\tthis.setState({\n\t\t\taccessToken: null,\n\t\t\tpreviousLoginAttemptFailed: false\n\t\t})\n\t}\n\n\thandleLoginAttempt = (credentials) => {\n\t\tAuthenticatorAPI.login(credentials)\n\t\t\t.then(({ accessToken }) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\taccessToken: accessToken,\n\t\t\t\t\tpreviousLoginAttemptFailed: false\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tpreviousLoginAttemptFailed: true\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tisUserLoggedIn = () => {\n\t\treturn this.state.accessToken ? true : false;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ErrorBoundary message=\"wystąpił błąd całej aplikacji\" >\n\t\t\t\t{\n\t\t\t\t\tthis.isUserLoggedIn()\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<header className=\"header\">\n\t\t\t\t\t\t\t\tWitaj {this.getUserEmail()}\n\t\t\t\t\t\t\t\t<a className=\"header__logout-link\" onClick={this.handleLogout} href=\"#\">\n\t\t\t\t\t\t\t\t\tWyloguj\n                           </a>\n\t\t\t\t\t\t\t</header>\n\n\n\n\t\t\t\t\t\t\t<div className=\"App\">\n\n\t\t\t\t\t\t\t\t<TimeboxList />\n\t\t\t\t\t\t\t\t<ErrorBoundary message=\"wystąpił błąd komponentu EditableTimebox\">\n\t\t\t\t\t\t\t\t\t<EditableTimebox />\n\t\t\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t: <LoginForm\n\t\t\t\t\t\t\terrorMessage={this.state.previousLoginAttemptFailed ? \"Nie udało się zalogować!\" : null}\n\t\t\t\t\t\t\tonLoginAttempt={this.handleLoginAttempt} />\n\t\t\t\t}\n\t\t\t</ErrorBoundary>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/main.scss\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\".root\"));\n"],"sourceRoot":""}