{"version":3,"sources":["components/LoginForm.js","api/AuthenticatorApi.js","components/App.js","index.js","context/AuthenticationContext.js","components/ErrorBoundary.js","components/ErrorMessage.js"],"names":["LoginForm","props","handleSubmit","e","onLoginAttempt","preventDefault","email","loginForm","current","children","emailInput","value","password","passwordInput","React","createRef","ref","this","onSubmit","className","errorMessage","htmlFor","id","type","Component","AuthenticatorAPI","login","credentials","a","makeRequest","response","json","result","url","method","body","jsonBody","JSON","stringify","undefined","fetch","headers","ok","Error","AuthenticatedApp","lazy","App","state","accessToken","previousLoginAttemptFailed","setTimerOnLogIn","timeToLogOut","Date","now","sessionTimeInSeconds","interval","setInterval","actualTime","handleLogout","clearTimeOnLogOut","clearInterval","getUserEmail","jwt","decode","setState","removeAccessTokenFromLocalStorage","handleLoginAttempt","then","catch","setAccessTokenToLocalStorage","localStorage","setItem","getItem","getAccessTokenFromLocalStorage","localStorageAccessToken","removeItem","isUserLoggedIn","ErrorBoundary","message","fallback","AuthenticationContext","Provider","onLogout","ReactDOM","render","document","querySelector","createContext","hasError","error","errorInfo","console","log","ErrorMessage"],"mappings":"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","file":"static/js/main.b0616130.chunk.js","sourcesContent":["import React from \"react\";\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.loginForm = React.createRef();\n    }\n\n    handleSubmit = e => {\n        const { onLoginAttempt } = this.props;\n        e.preventDefault();\n        onLoginAttempt({\n            email: this.loginForm.current.children.emailInput.value,\n            password: this.loginForm.current.children.passwordInput.value\n        });\n        this.loginForm.current.children.emailInput.value = \"\";\n        this.loginForm.current.children.passwordInput.value = \"\";\n    };\n\n    render() {\n        return (\n            <form\n                ref={this.loginForm}\n                onSubmit={this.handleSubmit}\n                className=\"LoginForm\"\n            >\n                {this.props.errorMessage ?\n                    <div className=\"LoginForm__error-message\">\n                        {this.props.errorMessage}\n                    </div>\n                    : \"\"\n                }\n                <label htmlFor=\"emailInputt\">Email: </label>\n                <input id=\"emailInput\" type=\"email\" />\n                <br />\n                <label htmlFor=\"passwordInput\">Password: </label>\n                <input id=\"passwordInput\" type=\"password\" />\n                <br />\n                <button>Zaloguj</button>\n            </form>\n        );\n    }\n}\n\nexport default LoginForm;\n","const BASE_URL = \"http://localhost:5000\";\nconst AuthenticatorAPI = {\n\n    login: async function (credentials) {\n\n        const response = await makeRequest(`${BASE_URL}/login`, \"POST\", credentials);\n        const result = await response.json();\n        return result;\n    },\n\n}\n\nexport default AuthenticatorAPI;\n\nasync function makeRequest(url, method, body) {\n    const jsonBody = body ? JSON.stringify(body) : undefined;\n    const response = await fetch(url, {\n        method: method,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: jsonBody\n    })\n    if (!response.ok) {\n        throw new Error(\"Something went wrong!...\");\n    }\n    return response;\n}","import React, { Suspense } from \"react\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport LoginForm from \"./LoginForm\";\nimport AuthenticatorAPI from \"../api/AuthenticatorApi\";\nimport jwt from \"jsonwebtoken\";\nimport AuthenticationContext from \"../context/AuthenticationContext\";\n\nconst AuthenticatedApp = React.lazy(() => import(\"./AuthenticatedApp\"));\nclass App extends React.Component {\n\n    state = {\n        accessToken: null,\n        previousLoginAttemptFailed: false\n    }\n\n    componentDidMount() {\n        this.getAccessTokenFromLocalStorage();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    setTimerOnLogIn = () => {\n        const sessionTimeInSeconds = 3600\n        const timeToLogOut = Date.now() + sessionTimeInSeconds * 1000;\n        this.interval = setInterval(() => {\n            const actualTime = Date.now()\n            if (timeToLogOut - actualTime <= 0) {\n                this.handleLogout();\n            }\n        }, 60000)\n    }\n\n    clearTimeOnLogOut = () => {\n        clearInterval(this.interval);\n    }\n\n    getUserEmail = () => {\n        const decodedToken = jwt.decode(this.state.accessToken)\n        return decodedToken.email;\n    }\n\n    handleLogout = () => {\n        this.setState({\n            accessToken: null,\n            previousLoginAttemptFailed: false\n        });\n        this.removeAccessTokenFromLocalStorage();\n    }\n\n    handleLoginAttempt = (credentials) => {\n        AuthenticatorAPI.login(credentials)\n            .then(({ accessToken }) => {\n                this.setState({\n                    accessToken: accessToken,\n                    previousLoginAttemptFailed: false\n                })\n            })\n            .catch(() => {\n                this.setState({\n                    previousLoginAttemptFailed: true\n                })\n            })\n    }\n\n    setAccessTokenToLocalStorage = () => {\n        if (this.state.accessToken) {\n            localStorage.setItem('timeboxing-access-token', this.state.accessToken);\n            const localStorageAccessToken = localStorage.getItem('timeboxing-access-token');\n        }\n    }\n\n    getAccessTokenFromLocalStorage = () => {\n        const localStorageAccessToken = localStorage.getItem('timeboxing-access-token');\n        if (localStorageAccessToken) {\n            this.setState({\n                accessToken: localStorageAccessToken\n            })\n        }\n    }\n\n    removeAccessTokenFromLocalStorage = () => {\n        localStorage.removeItem('timeboxing-access-token');\n\n    }\n\n    isUserLoggedIn = () => {\n        //when user is logged in store accessToken in localStorage\n        this.setAccessTokenToLocalStorage();\n        if (this.state.accessToken) {\n            this.setTimerOnLogIn();\n        } else this.clearTimeOnLogOut();\n\n        return this.state.accessToken ? true : false;\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <ErrorBoundary message=\"wystąpił błąd całej aplikacji\" >\n\n                    {\n                        this.isUserLoggedIn() ?\n                            <Suspense fallback={<div>Loading...</div>}>\n                                <AuthenticationContext.Provider value={{ accessToken: this.state.accessToken, onLogout: this.handleLogout }}>\n                                    <AuthenticatedApp />\n                                </AuthenticationContext.Provider>\n                            </Suspense>\n                            :\n                            <LoginForm\n                                errorMessage={this.state.previousLoginAttemptFailed ? \"Nie udało się zalogować!\" : null}\n                                onLoginAttempt={this.handleLoginAttempt}\n                            />\n\n                    }\n                </ErrorBoundary>\n            </div >\n\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/main.scss\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\".root\"));\n","import React from 'react';\n\nconst AuthenticationContext = React.createContext({ accessToken: null, onLogout: null });\n\nexport default AuthenticationContext;","import React from \"react\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport PropTypes from 'prop-types';\n\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        console.log(\"%c wystąpił następujący błąd\", \"color: red\", error, errorInfo);\n    }\n\n    render() {\n        const { message, children } = this.props;\n        return (\n            // this.state.hasError ? message : children\n            <ErrorMessage hasError={this.state.hasError} message={message}>{children}</ErrorMessage>\n        )\n    }\n}\n\nErrorBoundary.propTypes = {\n    message: PropTypes.string.isRequired,\n    children: PropTypes.any.isRequired\n\n}\n\nexport default ErrorBoundary;","\nimport React from 'react';\n\nfunction ErrorMessage({ message, children, hasError }) {\n    return (\n        <div>{hasError ? <div className=\"ErrorMessage\">{message}</div> : children}</div>\n    )\n}\n\nexport default ErrorMessage;\n"],"sourceRoot":""}